// Generated by Dagger (https://dagger.dev).
package com.languagexx.simplenotes.ui;

import com.languagexx.simplenotes.util.ViewModelProviderFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddFragment_MembersInjector implements MembersInjector<AddFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProviderFactory> viewmodelProviderFactoryProvider;

  public AddFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> viewmodelProviderFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewmodelProviderFactoryProvider = viewmodelProviderFactoryProvider;
  }

  public static MembersInjector<AddFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> viewmodelProviderFactoryProvider) {
    return new AddFragment_MembersInjector(androidInjectorProvider, viewmodelProviderFactoryProvider);}

  @Override
  public void injectMembers(AddFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewmodelProviderFactory(instance, viewmodelProviderFactoryProvider.get());
  }

  public static void injectViewmodelProviderFactory(AddFragment instance,
      ViewModelProviderFactory viewmodelProviderFactory) {
    instance.viewmodelProviderFactory = viewmodelProviderFactory;
  }
}
